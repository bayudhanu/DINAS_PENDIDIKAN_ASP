// <auto-generated />
using System;
using DinasPendidikan.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DinasPendidikan.Database.Migrations
{
    [DbContext(typeof(DinasPendidikanDbContext))]
    [Migration("20250615050443_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DinasPendidikan.Shared.Models.Documents.AttachmentDokumen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Deskripsi")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<int>("DokumenId")
                        .HasColumnType("integer");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("FileSize")
                        .HasColumnType("bigint");

                    b.Property<string>("FileType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("DokumenId");

                    b.ToTable("AttachmentDokumen");
                });

            modelBuilder.Entity("DinasPendidikan.Shared.Models.Documents.Disposisi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Catatan")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Dari")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("IsiDisposisi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Kepada")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NomorDisposisi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("SuratMasukId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("TanggalDisposisi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Disposisi");
                });

            modelBuilder.Entity("DinasPendidikan.Shared.Models.Documents.Dokumen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Catatan")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("CreatedById")
                        .HasColumnType("integer");

                    b.Property<string>("Judul")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("Konten")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NomorDokumen")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime>("TanggalDokumen")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("TanggalTerima")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("TipeDokumenId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("UpdatedById")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("TipeDokumenId");

                    b.HasIndex("UpdatedById");

                    b.ToTable("Dokumen");
                });

            modelBuilder.Entity("DinasPendidikan.Shared.Models.Documents.SuratKeluar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("IsiRingkas")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NomorSurat")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Penandatangan")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Perihal")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("TanggalSurat")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Tujuan")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("SuratKeluar");
                });

            modelBuilder.Entity("DinasPendidikan.Shared.Models.Documents.SuratKeputusan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Catatan")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Dari")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("IsiSuratKeputusan")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Kepada")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NomorSuratKeputusan")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("TanggalSuratKeputusan")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("SuratKeputusan");
                });

            modelBuilder.Entity("DinasPendidikan.Shared.Models.Documents.SuratMasuk", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("IsiRingkas")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NomorSurat")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Penerima")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Pengirim")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Perihal")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("TanggalDiterima")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("TanggalSurat")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("SuratMasuk");
                });

            modelBuilder.Entity("DinasPendidikan.Shared.Models.Documents.TipeDokumen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Deskripsi")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("Kode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("TipeDokumen");
                });

            modelBuilder.Entity("DinasPendidikan.Shared.Models.Inventory.DaftarBarang", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Deskripsi")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<decimal?>("HargaPembelian")
                        .HasColumnType("numeric");

                    b.Property<int>("Jumlah")
                        .HasColumnType("integer");

                    b.Property<int>("KategoriBarangId")
                        .HasColumnType("integer");

                    b.Property<string>("KodeBarang")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("Kondisi")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("Lokasi")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("NamaBarang")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime?>("TanggalPembelian")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("KategoriBarangId");

                    b.ToTable("DaftarBarang");
                });

            modelBuilder.Entity("DinasPendidikan.Shared.Models.Inventory.KategoriBarang", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Deskripsi")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("KategoriBarang");
                });

            modelBuilder.Entity("DinasPendidikan.Shared.Models.Inventory.TransaksiBarang", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Catatan")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("CreatedById")
                        .HasColumnType("integer");

                    b.Property<int>("DaftarBarangId")
                        .HasColumnType("integer");

                    b.Property<string>("JenisTransaksi")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<int>("Jumlah")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("UpdatedById")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("DaftarBarangId");

                    b.HasIndex("UpdatedById");

                    b.ToTable("TransaksiBarang");
                });

            modelBuilder.Entity("DinasPendidikan.Shared.Models.Users.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("DinasPendidikan.Shared.Models.Users.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("LastLogin")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("DinasPendidikan.Shared.Models.Users.UserRole", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRole");
                });

            modelBuilder.Entity("DinasPendidikan.Shared.Models.Documents.AttachmentDokumen", b =>
                {
                    b.HasOne("DinasPendidikan.Shared.Models.Documents.Dokumen", "Dokumen")
                        .WithMany("Attachments")
                        .HasForeignKey("DokumenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dokumen");
                });

            modelBuilder.Entity("DinasPendidikan.Shared.Models.Documents.Dokumen", b =>
                {
                    b.HasOne("DinasPendidikan.Shared.Models.Users.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DinasPendidikan.Shared.Models.Documents.TipeDokumen", "TipeDokumen")
                        .WithMany()
                        .HasForeignKey("TipeDokumenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DinasPendidikan.Shared.Models.Users.User", "UpdatedBy")
                        .WithMany()
                        .HasForeignKey("UpdatedById");

                    b.Navigation("CreatedBy");

                    b.Navigation("TipeDokumen");

                    b.Navigation("UpdatedBy");
                });

            modelBuilder.Entity("DinasPendidikan.Shared.Models.Inventory.DaftarBarang", b =>
                {
                    b.HasOne("DinasPendidikan.Shared.Models.Inventory.KategoriBarang", "KategoriBarang")
                        .WithMany()
                        .HasForeignKey("KategoriBarangId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KategoriBarang");
                });

            modelBuilder.Entity("DinasPendidikan.Shared.Models.Inventory.TransaksiBarang", b =>
                {
                    b.HasOne("DinasPendidikan.Shared.Models.Users.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DinasPendidikan.Shared.Models.Inventory.DaftarBarang", "DaftarBarang")
                        .WithMany("TransaksiBarang")
                        .HasForeignKey("DaftarBarangId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DinasPendidikan.Shared.Models.Users.User", "UpdatedBy")
                        .WithMany()
                        .HasForeignKey("UpdatedById");

                    b.Navigation("CreatedBy");

                    b.Navigation("DaftarBarang");

                    b.Navigation("UpdatedBy");
                });

            modelBuilder.Entity("DinasPendidikan.Shared.Models.Users.UserRole", b =>
                {
                    b.HasOne("DinasPendidikan.Shared.Models.Users.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DinasPendidikan.Shared.Models.Users.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DinasPendidikan.Shared.Models.Documents.Dokumen", b =>
                {
                    b.Navigation("Attachments");
                });

            modelBuilder.Entity("DinasPendidikan.Shared.Models.Inventory.DaftarBarang", b =>
                {
                    b.Navigation("TransaksiBarang");
                });
#pragma warning restore 612, 618
        }
    }
}
